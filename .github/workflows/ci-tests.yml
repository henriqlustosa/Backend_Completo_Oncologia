name: Executar Testes Automatizados

on:
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12.2
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: AMam@!12
          POSTGRES_DB: livraria_test
        ports:
          # will assign a random free host port
          - 5432/5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_PASSWORD: AMam@!12
      POSTGRES_USER: postgres
    steps:
      - uses: actions/checkout@v2
      
      - name: Configurar JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      
      - name: Configurar Maven
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2	  
		  
      - name: Executar os testes
        run: mvn clean test --file pom.xml
     

  deploy:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      
      - name: Configurar JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      
      - name: Configurar Maven
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      
      - name: Gerar build
        run: mvn clean package -DskipTests

      - name: Deploy no heroku 
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "livraria-api-henrique-lustosa"
          heroku_email: "henriqlustosa@gmail.com"
          usedocker: true